name: CI

on:
    push:
        branches:
            - "*"
    pull_request:
        branches:
            - "*"

# concurrency:
#     group: ${{ github.event.pull_request.head.sha || github.sha }}
#     cancel-in-progress: true

jobs:
    commit:
        name: Commit check
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code (full-history)
              if: github.event_name == 'pull_request'
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
                  ref: ${{ github.event.pull_request.head.ref }}

            - name: Checkout code
              if: github.event_name == 'push'
              uses: actions/checkout@v4
              with:
                  fetch-depth: 1

            - name: Set up Bun
              uses: oven-sh/setup-bun@v2

            - name: Install dependencies
              run: bun ci

            - name: Check current commit
              if: github.event_name == 'push'
              run: bunx commitlint --last --verbose

            - name: Check PR commits
              if: github.event_name == 'pull_request'
              run: npx bunx --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose


    quality:
        name: Quality check
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Biome CLI
              uses: biomejs/setup-biome@v2

            - name: Run check
              run: biome ci --reporter=github --no-errors-on-unmatched

    type:
        name: Type check
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Bun
              uses: oven-sh/setup-bun@v2

            - name: Install dependencies
              run: bun ci

            - name: Run check
              run: bun check:type

    spec:
        name: Spec check
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Bun
              uses: oven-sh/setup-bun@v2

            - name: Install dependencies
              run: bun ci

            - name: Run check
              run: bun check:spec --coverage-reporter=lcov --reporter=junit --reporter-outfile=junit.xml

            - name: Upload lcov.info
              uses: codecov/codecov-action@v5
              with:
                  fail_ci_if_error: true
                  verbose: true
                  token: ${{ secrets.CODECOV_TOKEN }}

            - name: Upload junit.xml
              uses: codecov/test-results-action@v1
              with:
                  fail_ci_if_error: true
                  verbose: true
                  token: ${{ secrets.CODECOV_TOKEN }}
